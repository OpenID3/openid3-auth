/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  Secp256r1Verifier,
  Secp256r1VerifierInterface,
} from "../Secp256r1Verifier";

const _abi = [
  {
    inputs: [],
    name: "nn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100195760c2908161001f823930815050f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c90816372a4c30f14605a57506391327ec614603457600080fd5b80600319360112605757604051600160601b63ffffffff60c01b03198152602090f35b80fd5b9050816003193601126088576f4319055258e8617b0c46353d039cdaae63ffffffff60c01b01198152602090f35b5080fdfea2646970667358221220caba42b4cc457bfcdcc84ea5d5a2094f2dafceec9eab2349b2258c2a3346df5464736f6c63430008150033";

type Secp256r1VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Secp256r1VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Secp256r1Verifier__factory extends ContractFactory {
  constructor(...args: Secp256r1VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Secp256r1Verifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Secp256r1Verifier__factory {
    return super.connect(runner) as Secp256r1Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Secp256r1VerifierInterface {
    return new Interface(_abi) as Secp256r1VerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Secp256r1Verifier {
    return new Contract(address, _abi, runner) as unknown as Secp256r1Verifier;
  }
}
