/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { RsaCert, RsaCertInterface } from "../RsaCert";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_issuer",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_N",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "E",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "N",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getIssuer",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523461020857610492803803806100198161020d565b928339810160408282031261020857815160208084015191936001600160401b039290838211610208570192601f908082860112156102085784518481116101de57601f199561006e8285018816860161020d565b9282845285838301011161020857849060005b8381106101f45750506000918301015280519384116101de57600054926001938481811c911680156101d4575b828210146101be57838111610178575b5080928511600114610113575083945090839291600094610108575b50501b916000199060031b1c1916176000555b60805260405161025f90816102338239608051816101bd0152f35b0151925038806100da565b9294849081166000805284600020946000905b8883831061015e5750505010610145575b505050811b016000556100ed565b015160001960f88460031b161c19169055388080610137565b858701518855909601959485019487935090810190610126565b60008052816000208480880160051c8201928489106101b5575b0160051c019085905b8281106101a95750506100be565b6000815501859061019b565b92508192610192565b634e487b7160e01b600052602260045260246000fd5b90607f16906100ae565b634e487b7160e01b600052604160045260246000fd5b818101830151858201840152869201610081565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176101de5760405256fe60806040818152600436101561001457600080fd5b600091823560e01c90816352556421146101a65750806392bbf6e8146101485763c9e525df1461004357600080fd5b34610144578160031936011261014457805190828354600181811c9080831692831561013a575b60209384841081146101265783885290811561010a57506001146100d2575b505050829003601f01601f19168201926001600160401b038411838510176100be57508291826100ba9252826101e0565b0390f35b634e487b7160e01b81526041600452602490fd5b919250858052828620918387935b8385106100f65750505050830101388080610089565b8054888601830152930192849082016100e0565b60ff1916878501525050151560051b8401019050388080610089565b634e487b7160e01b89526022600452602489fd5b91607f169161006a565b5080fd5b50346101445781600319360112610144578051908181016001600160401b03811183821017610192578152600382526201000160e81b602083015251915081906100ba90826101e0565b634e487b7160e01b84526041600452602484fd5b8390346101445781600319360112610144576020907f00000000000000000000000000000000000000000000000000000000000000008152f35b6020808252825181830181905290939260005b82811061021557505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016101f356fea2646970667358221220b99b1449270c079e3214b6637490d36d335f474a20b4464cb78a356bfb0021a564736f6c63430008150033";

type RsaCertConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RsaCertConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RsaCert__factory extends ContractFactory {
  constructor(...args: RsaCertConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _issuer: BytesLike,
    _N: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_issuer, _N, overrides || {});
  }
  override deploy(
    _issuer: BytesLike,
    _N: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_issuer, _N, overrides || {}) as Promise<
      RsaCert & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RsaCert__factory {
    return super.connect(runner) as RsaCert__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RsaCertInterface {
    return new Interface(_abi) as RsaCertInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RsaCert {
    return new Contract(address, _abi, runner) as unknown as RsaCert;
  }
}
