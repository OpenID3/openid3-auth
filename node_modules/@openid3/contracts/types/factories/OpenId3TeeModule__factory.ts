/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  OpenId3TeeModule,
  OpenId3TeeModuleInterface,
} from "../OpenId3TeeModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyAttested",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSchemaId",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyPortalOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedProvider",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "accAndTypeHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "subject",
        type: "bytes",
      },
    ],
    name: "Attested",
    type: "event",
  },
  {
    inputs: [],
    name: "GOOGLE_PROVIDER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SCHEMA_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "schemaId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "expirationDate",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "subject",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "attestationData",
            type: "bytes",
          },
        ],
        internalType: "struct AttestationPayload",
        name: "attestationPayload",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "validationPayload",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "run",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461007157601f61077338819003918201601f19168301916001600160401b038311848410176100765780849260209460405283398101031261007157516001600160a01b0381168103610071576080526040516106e6908161008d823960805181818161026901526104890152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a7146104b857508163238ac93314610474578163374d145214610439578163378144b014610099575063928a5c8a1461005c57600080fd5b34610095578160031936011261009557602090517f8f2f90d8304f6eb382d037c47a041d8c8b4d18bdd8b082fa32828e016a584ca78152f35b5080fd5b919050346104355760031991608036840112610431576001600160401b039281359084821161042d5760809082360301126104295782519160808301838110868211176104165784528181013583526024820135928584168403610412576020938482015260448301358681116103a4576101199083369186010161055f565b928582019384526064810135908782116103fe578361013b923692010161055f565b95606082019687526024359081116103a45761015a903690840161055f565b6001600160a01b0391604435838116036103fe57517f6eddebd9646476e5f28bae68bfcf45ecdf82c40871aeacae9f62162275cc697a0161040257865186818051810103126103fe578501517f70d06f27cfb0914c7d2fc83b85fbe27374b2e742274f7d05cd7d71fe95a7b359016103ee578651845161020c8789518093826101ec81840197888151938492016105ab565b8201610200825180938680850191016105ab565b0103808452018261050b565b51902096518581519101209687895288865260ff878a2054166103de57878952888652868920805460ff191660011790557b0ca2ba3432b932bab69029b4b3b732b21026b2b9b9b0b3b29d05199960211b8952601c52603c8820907f00000000000000000000000000000000000000000000000000000000000000009061029381846105f3565b60058110156103cb57908b9392911595866103bc575b50508415610308575b50505050156102fa5750906102f47f1c978da31d5a734f3dd3b88a7801d344b522301e6d07006e51520330e6c0795d93925192519282849384528301906105ce565b0390a280f35b8351638baa579f60e01b8152fd5b8293945088516103488161033a8b820194630b135d3f60e11b998a875260248401528d604484015260648301906105ce565b03601f19810183528261050b565b51915afa903d156103b5573d61035d81610544565b9061036a8851928361050b565b81523d898783013e5b826103a8575b8261038a575b5050388781806102b2565b90915084818051810103126103a45784015114388061037f565b8780fd5b9150848251101591610379565b6060610373565b838116911614945038806102a9565b634e487b7160e01b8c526021875260248cfd5b86516335d9080560e01b81528490fd5b8551637f4d001d60e01b81528390fd5b8880fd5b85516330ccdca160e01b81528390fd5b8680fd5b634e487b7160e01b875260418252602487fd5b8480fd5b8580fd5b8380fd5b8280fd5b505034610095578160031936011261009557602090517f912214269b9b891a0d7451974030ba13207d3bf78e515351609de9dd8a3396868152f35b505034610095578160031936011261009557517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b849134610435576020366003190112610435573563ffffffff60e01b8116809103610435576020925063367e8d1760e01b81149081156104fa575b5015158152f35b6301ffc9a760e01b149050836104f3565b601f909101601f19168101906001600160401b0382119082101761052e57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161052e57601f01601f191660200190565b81601f820112156105a65780359061057682610544565b92610584604051948561050b565b828452602083830101116105a657816000926020809301838601378301015290565b600080fd5b60005b8381106105be5750506000910152565b81810151838201526020016105ae565b906020916105e7815180928185528580860191016105ab565b601f01601f1916010190565b9060418151146000146106215761061d916020820151906060604084015193015160001a9061062b565b9091565b5050600090600290565b9291906fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383116106a45791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156106975781516001600160a01b03811615610691579190565b50600190565b50604051903d90823e3d90fd5b5050505060009060039056fea26469706673582212202ea966622c6b69d01a9626d90ffc314b4b12824deba402ee412d23d8827a0e5b64736f6c63430008150033";

type OpenId3TeeModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OpenId3TeeModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OpenId3TeeModule__factory extends ContractFactory {
  constructor(...args: OpenId3TeeModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _signer: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_signer, overrides || {});
  }
  override deploy(
    _signer: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_signer, overrides || {}) as Promise<
      OpenId3TeeModule & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OpenId3TeeModule__factory {
    return super.connect(runner) as OpenId3TeeModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OpenId3TeeModuleInterface {
    return new Interface(_abi) as OpenId3TeeModuleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OpenId3TeeModule {
    return new Contract(address, _abi, runner) as unknown as OpenId3TeeModule;
  }
}
