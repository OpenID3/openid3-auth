/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  RsaCertRegistration,
  RsaCertRegistrationInterface,
} from "../RsaCertRegistration";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "kidHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "cert",
        type: "address",
      },
    ],
    name: "CertAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "kidHash",
        type: "bytes32",
      },
    ],
    name: "CertRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "kidHash",
        type: "bytes32",
      },
    ],
    name: "getCert",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "kidHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "provider",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "N",
        type: "bytes",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "kidHash",
        type: "bytes32",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class RsaCertRegistration__factory {
  static readonly abi = _abi;
  static createInterface(): RsaCertRegistrationInterface {
    return new Interface(_abi) as RsaCertRegistrationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RsaCertRegistration {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as RsaCertRegistration;
  }
}
