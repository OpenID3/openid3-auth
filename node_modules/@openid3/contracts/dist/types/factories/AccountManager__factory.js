"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountManager__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "OnlyAdminAllowed",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "enabled",
                        type: "bool",
                    },
                    {
                        internalType: "uint48",
                        name: "validAfter",
                        type: "uint48",
                    },
                    {
                        internalType: "uint48",
                        name: "validUntil",
                        type: "uint48",
                    },
                ],
                indexed: false,
                internalType: "struct IAccountManager.ValidationData",
                name: "data",
                type: "tuple",
            },
        ],
        name: "Grant",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "metadata",
                type: "bytes",
            },
        ],
        name: "NewMetadata",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
        ],
        name: "Revoke",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "address",
                name: "validator",
                type: "address",
            },
        ],
        name: "getValidationData",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "enabled",
                        type: "bool",
                    },
                    {
                        internalType: "uint48",
                        name: "validAfter",
                        type: "uint48",
                    },
                    {
                        internalType: "uint48",
                        name: "validUntil",
                        type: "uint48",
                    },
                ],
                internalType: "struct IAccountManager.ValidationData",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "validator",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "enabled",
                        type: "bool",
                    },
                    {
                        internalType: "uint48",
                        name: "validAfter",
                        type: "uint48",
                    },
                    {
                        internalType: "uint48",
                        name: "validUntil",
                        type: "uint48",
                    },
                ],
                internalType: "struct IAccountManager.ValidationData",
                name: "data",
                type: "tuple",
            },
        ],
        name: "grant",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "validator",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "enabled",
                        type: "bool",
                    },
                    {
                        internalType: "uint48",
                        name: "validAfter",
                        type: "uint48",
                    },
                    {
                        internalType: "uint48",
                        name: "validUntil",
                        type: "uint48",
                    },
                ],
                internalType: "struct IAccountManager.ValidationData",
                name: "data",
                type: "tuple",
            },
            {
                internalType: "bytes",
                name: "metadata",
                type: "bytes",
            },
        ],
        name: "initAccount",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "validator",
                type: "address",
            },
        ],
        name: "revoke",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "metadata",
                type: "bytes",
            },
        ],
        name: "setMetadata",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4",
            },
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "challenge",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "validationData",
                type: "bytes",
            },
        ],
        name: "validateSignature",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x6080806040523461001657610cb9908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c90816301ffc9a71461008a575080632648e35d14610085578063333daf921461008057806374a8f1031461007b57806390bc65ae14610076578063ee57e36f146100715763f7d01c7e1461006c57600080fd5b6104b3565b610418565b61037e565b6102cc565b610286565b6101a3565b346100c35760203660031901126100c3576004359063ffffffff60e01b82168092036100c3575063199ed7c960e11b1460805260206080f35b80fd5b600435906001600160a01b03821682036100dc57565b600080fd5b602435906001600160a01b03821682036100dc57565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761012857604052565b6100f7565b601f909101601f19168101906001600160401b0382119082101761012857604052565b60609060231901126100dc57604051906101698261010d565b8160243580151581036100dc57815265ffffffffffff9060443582811681036100dc57602082015260643591821682036100dc5760400152565b346100dc5760803660031901126100dc576101bc6100c6565b6101c536610150565b6101ce33610661565b806101f5575b6101e3576101e1916107b3565b005b604051634777b53760e11b8152600490fd5b50604051634b4fd03b60e01b8152602081600481335afa80156102545760ff91600091610226575b501615156101d4565b610247915060203d811161024d575b61023f818361012d565b810190610560565b3861021d565b503d610235565b610579565b9181601f840112156100dc578235916001600160401b0383116100dc57602083818601950101116100dc57565b346100dc5760403660031901126100dc576024356001600160401b0381116100dc576102c46102bb6020923690600401610259565b9060043561095a565b604051908152f35b346100dc5760203660031901126100dc576102e56100c6565b6102ee33610661565b80610301575b6101e3576101e190610848565b50604051634b4fd03b60e01b8152602081600481335afa80156102545760ff91600091610332575b501615156102f4565b61034a915060203d811161024d5761023f818361012d565b38610329565b919091604060608201938051151583528160208201519165ffffffffffff8093166020860152015116910152565b346100dc576040806003193601126100dc57610414906103d961039f6100c6565b82806103a96100e1565b9281516103b58161010d565b6000928184809352826020820152015260018060a01b03168152806020522061079c565b908051916103e68361010d565b5460ff81161515835265ffffffffffff90818160081c16602085015260381c16818301525191829182610350565b0390f35b346100dc5760203660031901126100dc576004356001600160401b0381116100dc57610448903690600401610259565b61045133610661565b80610464575b6101e3576101e191610898565b50604051634b4fd03b60e01b8152602081600481335afa80156102545760ff91600091610495575b50161515610457565b6104ad915060203d811161024d5761023f818361012d565b3861048c565b346100dc5760a03660031901126100dc576104cc6100c6565b6104d536610150565b6084356001600160401b0381116100dc576104f4903690600401610259565b916104fe33610661565b80610511575b6101e3576101e193610585565b50604051634b4fd03b60e01b8152602081600481335afa80156102545760ff91600091610542575b50161515610504565b61055a915060203d811161024d5761023f818361012d565b38610539565b908160209103126100dc575160ff811681036100dc5790565b6040513d6000823e3d90fd5b9092919261059233610661565b80610612575b6101e3576105a5916107b3565b6105ae33610661565b806105c3575b6101e3576105c191610898565b565b50604051634b4fd03b60e01b8152602081600481335afa80156102545760ff916000916105f4575b501615156105b4565b61060c915060203d811161024d5761023f818361012d565b386105eb565b50604051634b4fd03b60e01b8152602081600481335afa80156102545760ff91600091610643575b50161515610598565b61065b915060203d811161024d5761023f818361012d565b3861063a565b6040519060208083018160006301ffc9a760e01b958684528660248201526024815261068c8161010d565b51617530938685fa933d6000519086610734575b508561072a575b50846106c7575b505050816106ba575090565b6106c4915061073f565b90565b83945090600091839460405185810192835263ffffffff60e01b6024820152602481526106f38161010d565b5192fa60005190913d8361071f575b505081610715575b5015903880806106ae565b905015153861070a565b101591503880610702565b15159450386106a7565b8411159550386106a0565b6000602091604051838101906301ffc9a760e01b82526396333e9960e01b60248201526024815261076f8161010d565b5191617530fa6000513d82610790575b5081610789575090565b9050151590565b6020111591503861077f565b9060018060a01b0316600052602052604060002090565b903360005260006020526107cb82604060002061079c565b81511515815466ffffffffffff00602085015160081b169060ff65ffffffffffff60381b604087015160381b1693169060018060681b03191617171790557f97b4e9b452672ece3b37c332a41b696347b6e2dc640c910820d5bdd88a834c8d6040519260018060a01b03169280610843339482610350565b0390a3565b33600052600060205261085f81604060002061079c565b805460ff191690556001600160a01b0316337fd7426110292f20fe59e73ccf52124e0f5440a756507c91c7b0a6c50e1eb1a23a600080a3565b7f55c69143aa5abb7a7fdbb73fe161133faaba97029f336ab718645b96d7c5260b9082604051916020835281602084015260408301376000604084830101526040813394601f80199101168101030190a2565b90929192836014116100dc5783116100dc57601401916013190190565b6001600160401b03811161012857601f01601f191660200190565b92919261092f82610908565b9161093d604051938461012d565b8294818452818301116100dc578281602093846000960137010152565b90826014116100dc57803560601c9033600052600060205261098082604060002061079c565b936040519461098e8661010d565b5460ff811615908115875265ffffffffffff90818160081c16602089015260381c166040870152610a1d576109fc81610a03926109f6610a09977b0ca2ba3432b932bab69029b4b3b732b21026b2b9b9b0b3b29d05199960211b600052601c52603c60002090565b946108eb565b3691610923565b91610a27565b15610a17576106c490610c37565b50600190565b5050505050600190565b9190610a338282610b4e565b6005819592951015610b3857159384610b22575b508315610a55575b50505090565b909192506040519260209384810191630b135d3f60e11b948584526024830152604060448301528051908160648401528660005b838110610b0d575050509181610abf60848286600083819a9899829a010152601f8019910116810103606481018452018261012d565b51915afa91610acc610bf8565b9083610b00575b83610ae4575b505050388080610a4f565b610af79293508082518301019101610c28565b14388080610ad9565b8093508151101592610ad3565b81818401015160848287010152018790610a89565b6001600160a01b03828116911614935038610a47565b634e487b7160e01b600052602160045260246000fd5b906041815114600014610b7c57610b78916020820151906060604084015193015160001a90610b86565b9091565b5050600090600290565b9291906fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311610bec5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156102545781516001600160a01b03811615610a17579190565b50505050600090600390565b3d15610c23573d90610c0982610908565b91610c17604051938461012d565b82523d6000602084013e565b606090565b908160209103126100dc575190565b602081015160409091015160a01b65ffffffffffff60a01b1660d09190911b6001600160d01b031916908101908110610c6d5790565b634e487b7160e01b600052601160045260246000fdfea26469706673582212205193d4060a452296268e2ef43d662a142e7de03047906625fd6a052978a7592864736f6c63430008150033";
const isSuperArgs = (xs) => xs.length > 1;
class AccountManager__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.AccountManager__factory = AccountManager__factory;
AccountManager__factory.bytecode = _bytecode;
AccountManager__factory.abi = _abi;
