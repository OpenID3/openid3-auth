import { type ContractRunner } from "ethers";
import type { IAccountManager, IAccountManagerInterface } from "../IAccountManager";
export declare class IAccountManager__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "bool";
                readonly name: "enabled";
                readonly type: "bool";
            }, {
                readonly internalType: "uint48";
                readonly name: "validAfter";
                readonly type: "uint48";
            }, {
                readonly internalType: "uint48";
                readonly name: "validUntil";
                readonly type: "uint48";
            }];
            readonly indexed: false;
            readonly internalType: "struct IAccountManager.ValidationData";
            readonly name: "data";
            readonly type: "tuple";
        }];
        readonly name: "Grant";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "metadata";
            readonly type: "bytes";
        }];
        readonly name: "NewMetadata";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }];
        readonly name: "Revoke";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "validator";
            readonly type: "address";
        }];
        readonly name: "getValidationData";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bool";
                readonly name: "enabled";
                readonly type: "bool";
            }, {
                readonly internalType: "uint48";
                readonly name: "validAfter";
                readonly type: "uint48";
            }, {
                readonly internalType: "uint48";
                readonly name: "validUntil";
                readonly type: "uint48";
            }];
            readonly internalType: "struct IAccountManager.ValidationData";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "bool";
                readonly name: "enabled";
                readonly type: "bool";
            }, {
                readonly internalType: "uint48";
                readonly name: "validAfter";
                readonly type: "uint48";
            }, {
                readonly internalType: "uint48";
                readonly name: "validUntil";
                readonly type: "uint48";
            }];
            readonly internalType: "struct IAccountManager.ValidationData";
            readonly name: "data";
            readonly type: "tuple";
        }];
        readonly name: "grant";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }];
        readonly name: "revoke";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "metadata";
            readonly type: "bytes";
        }];
        readonly name: "setMetadata";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "challenge";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "signature";
            readonly type: "bytes";
        }];
        readonly name: "validateSignature";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "validationData";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): IAccountManagerInterface;
    static connect(address: string, runner?: ContractRunner | null): IAccountManager;
}
