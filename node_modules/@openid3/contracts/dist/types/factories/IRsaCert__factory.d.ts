import { type ContractRunner } from "ethers";
import type { IRsaCert, IRsaCertInterface } from "../IRsaCert";
export declare class IRsaCert__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "E";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "N";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getIssuer";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): IRsaCertInterface;
    static connect(address: string, runner?: ContractRunner | null): IRsaCert;
}
