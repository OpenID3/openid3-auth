"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PasskeyAdmin__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "OnlyAdminAllowed",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "keyId",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "pubKeyX",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "pubKeyY",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct Passkey",
                name: "pubKey",
                type: "tuple",
            },
            {
                indexed: false,
                internalType: "string",
                name: "passkeyId",
                type: "string",
            },
        ],
        name: "PasskeySet",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "getPasskeyId",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "pubKeyX",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "pubKeyY",
                        type: "uint256",
                    },
                ],
                internalType: "struct Passkey",
                name: "pubKey",
                type: "tuple",
            },
            {
                internalType: "string",
                name: "passkeyId",
                type: "string",
            },
        ],
        name: "setPasskey",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4",
            },
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "challenge",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "validationData",
                type: "bytes",
            },
        ],
        name: "validateSignature",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608080604052346100165761108a908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c90816301ffc9a71461005a57508063333daf921461005557806362566ce9146100505763fef127711461004b57600080fd5b61022f565b610108565b610096565b34610093576020366003190112610093576004359063ffffffff60e01b8216809203610093575063199ed7c960e11b1460805260206080f35b80fd5b34610103576040366003190112610103576001600160401b036024358181116101035736602382011215610103578060040135918211610103573660248383010111610103576100ff9160246100ef92016004356106de565b6040519081529081906020820190565b0390f35b600080fd5b34610103576020366003190112610103576004356001600160a01b038116908190036101035760005260006020526020604060002054604051908152f35b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761017757604052565b610146565b601f909101601f19168101906001600160401b0382119082101761017757604052565b6040519060c082016001600160401b0381118382101761017757604052565b604051906101cb8261015c565b565b6001600160401b03811161017757601f01601f191660200190565b81601f82011215610103578035906101ff826101cd565b9261020d604051948561017c565b8284526020838301011161010357816000926020809301838601378301015290565b346101035736600319016060811261010357604013610103576044356001600160401b038111610103576102679036906004016101e8565b6102703361042d565b80610297575b610285576102839061037b565b005b604051634777b53760e11b8152600490fd5b50604051634b4fd03b60e01b8152602081600481335afa80156102f65760ff916000916102c8575b50161515610276565b6102e9915060203d81116102ef575b6102e1818361017c565b8101906102fb565b386102bf565b503d6102d7565b610314565b90816020910312610103575160ff811681036101035790565b6040513d6000823e3d90fd5b919082604091031261010357604080519081016001600160401b03811182821017610177576040526020808294803584520135910152565b60005b83811061036b5750506000910152565b818101518382015260200161035b565b6040908160031936011261010357815191828101906001600160401b03821184831017610177577f6d609710e6d70b04cc713f483dc5e373b72e140a9aa303a22c97b4a71d8658b09181526060600435918286526103e160243596876020820152610972565b9533600052600060205286826000205581519384526020840152820152610418835180948160608501526020608085019101610358565b3392601f01601f1916810181900360800190a3565b6040519060208083018160006301ffc9a760e01b95868452866024820152602481526104588161015c565b51617530938685fa933d6000519086610500575b50856104f6575b5084610493575b50505081610486575090565b610490915061050b565b90565b83945090600091839460405185810192835263ffffffff60e01b6024820152602481526104bf8161015c565b5192fa60005190913d836104eb575b5050816104e1575b50159038808061047a565b90501515386104d6565b1015915038806104ce565b1515945038610473565b84111595503861046c565b6000602091604051838101906301ffc9a760e01b82526396333e9960e01b60248201526024815261053b8161015c565b5191617530fa6000513d8261055c575b5081610555575090565b9050151590565b6020111591503861054b565b90602082820312610103576001600160401b0391803590838211610103570160e0818303126101035761059961019f565b92813581811161010357836105af9184016101e8565b8452602082013581811161010357836105c99184016101e8565b6020850152604082013590811161010357826105ec60c0946105fa9385016101e8565b604086015260608301610320565b606084015260a08101356080840152013560a082015290565b90604051916020830152602082526040820182811060018060401b0382111761017757604052565b9061064e60209282815194859201610358565b0190565b6101cb9193929360405194859160209361067481518092878088019101610358565b830161068882518093878085019101610358565b0161069b82518093868085019101610358565b0103808552018361017c565b60406101cb91939293815194816106c8879351809260208087019101610358565b820190602082015203602081018552018361017c565b91906106ec91810190610568565b9060608201906106fc8251610972565b336000908152602081905260409020540361079a57600061074861073c61072c610727602095610613565b610897565b8487015190604088015191610652565b6040519182809261063b565b039060025afa156102f6576020600061076661073c825186516106a7565b039060025afa156102f65761078b9160005191519060a060808201519101519161099c565b1561079557600090565b600190565b505050600190565b60405190602082016001600160401b038111838210176101775760405260008252565b604051906107d28261015c565b604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b634e487b7160e01b600052601160045260246000fd5b906002820180921161084857565b610824565b600281901b91906001600160fe1b0381160361084857565b9061086f826101cd565b61087c604051918261017c565b828152809261088d601f19916101cd565b0190602036910137565b805115610969576108a66107c5565b6108ca6108c56108c06108b9855161083a565b6003900490565b61084d565b610865565b9160208301918182518301915b82821061091757505050600390510680600114610904576002146108f9575090565b603d90600019015390565b50603d9081600019820153600119015390565b9091936004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c16880101516002860153168501015190820153019391906108d7565b506104906107a2565b6020815191015160405190602082019283526040820152604081526109968161015c565b51902090565b92919060008051602061103583398151915280821080159190610b68575b50610b5f5761049093610b546109ce610cce565b916109d76101be565b6000815260006020820152600060408201528352602081519101516109fa6101be565b918252602082015260016040820152610a196020840191808352610d5c565b90610b45610a2f60408601938085528351610d12565b9260608601938452610b35610b25610a456101be565b7f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c29681527f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5602082015260016040820152610aa860808a0191808352875190610d12565b60a08a0152610aba8151855190610d12565b60c08a0152610acc8151885190610d12565b60e08a0152610adb8151610d5c565b90610af06101008b0192808452885190610d12565b6101208b0152610b038251865190610d12565b6101408b0152610b168251895190610d12565b6101608b015251905190610d12565b6101808801948186525190610d12565b6101a08701528251905190610d12565b6101c085015251905190610d12565b6101e0820152610b73565b50505050600090565b9050821015386109ba565b9392909160008051602061103583398151915290818410801590610c71575b610c6757610b9f90610fc0565b81818509920990600080918193608091825b610bc957505050610bc493949550610d7c565b501490565b85610c45575b888160fe1c600c8460fc1c161780610bfc575b5050610bf590600292831b921b92610ca2565b9182610bb1565b610c389397610bf5976040610c2f610c1785879b989b610c7b565b5151946020610c268289610c7b565b51015196610c7b565b51015194610e16565b9590945090928838610be2565b9294610c569194610c5c9396610f22565b91610f22565b949193909392610bcf565b5060009450505050565b5081811015610b92565b906010811015610c8c5760051b0190565b634e487b7160e01b600052603260045260246000fd5b8015610848576000190190565b60405190610cbc8261015c565b60006040838281528260208201520152565b604051906102008083016001600160401b03811184821017610177576040528260005b828110610cfd57505050565b602090610d08610caf565b8184015201610cf1565b610d3f91610d1e610caf565b50815191604060208201519101518251916040602085015194015194610e16565b9060405192610d4d8461015c565b83526020830152604082015290565b610d3f90610d68610caf565b508051906040602082015191015191610f22565b9291908115610e0a57600160601b63ffffffff60c01b03199160008382818111610e00575b505060408051602080825280820181905291810182905260608101939093526002600160601b0363ffffffff60c01b0319608084015260a083018590528260c08160056105dcfa15610093575082905181808280098097099509900990565b0691508338610da1565b50509050600090600090565b939593919081610e2857505050929190565b90929194958615610f1857600160601b63ffffffff60c01b0319958694859485919082808380099b818d999781868180808f9d888009809d099c8d99099c81878d0990099c099009930895818110610f11575b03958280808960020980099281808481878d0993818110610f0a575b036002099481868009980996828089600209830890818110610f03575b039b8c936002090994818110610efc575b03900997828910610ef3575b859182910892800995828710610eea575b960394030990565b95840195610ee2565b97850197610ed1565b8301610ec5565b8301610eb4565b8201610e97565b8301610e7b565b5094505091929190565b929091600160601b63ffffffff60c01b031990819081808087800988096004099582808080808a8009818b800909600809928180808080898009818a8009096003600160601b0363ffffffff60c01b03190992800960030908818960020982828009818110610fb9575b038981809b10610fb2575b039009818110610fab575b03940960020990565b8301610fa2565b8301610f97565b8301610f8c565b60008051602061103583398151915280821161102b575b60405191602083526020808401526020604084015260608301526f4319055258e8617b0c46353d039cdab063ffffffff60c01b0119608083015260a082015260208160c08160056105dcfa15610103575190565b80910690610fd756feffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551a2646970667358221220722d53479d7d2ad8d5f6e246f30db5b5a177e32182c04d715942a4391f16f4b064736f6c63430008150033";
const isSuperArgs = (xs) => xs.length > 1;
class PasskeyAdmin__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.PasskeyAdmin__factory = PasskeyAdmin__factory;
PasskeyAdmin__factory.bytecode = _bytecode;
PasskeyAdmin__factory.abi = _abi;
