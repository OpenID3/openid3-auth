import { type ContractRunner } from "ethers";
import type { AccountAdminBase, AccountAdminBaseInterface } from "../AccountAdminBase";
export declare class AccountAdminBase__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "OnlyAdminAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "challenge";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "signature";
            readonly type: "bytes";
        }];
        readonly name: "validateSignature";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "validationData";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): AccountAdminBaseInterface;
    static connect(address: string, runner?: ContractRunner | null): AccountAdminBase;
}
