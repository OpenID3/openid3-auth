"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IAccountManager__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "enabled",
                        type: "bool",
                    },
                    {
                        internalType: "uint48",
                        name: "validAfter",
                        type: "uint48",
                    },
                    {
                        internalType: "uint48",
                        name: "validUntil",
                        type: "uint48",
                    },
                ],
                indexed: false,
                internalType: "struct IAccountManager.ValidationData",
                name: "data",
                type: "tuple",
            },
        ],
        name: "Grant",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "metadata",
                type: "bytes",
            },
        ],
        name: "NewMetadata",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
        ],
        name: "Revoke",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "address",
                name: "validator",
                type: "address",
            },
        ],
        name: "getValidationData",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "enabled",
                        type: "bool",
                    },
                    {
                        internalType: "uint48",
                        name: "validAfter",
                        type: "uint48",
                    },
                    {
                        internalType: "uint48",
                        name: "validUntil",
                        type: "uint48",
                    },
                ],
                internalType: "struct IAccountManager.ValidationData",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "enabled",
                        type: "bool",
                    },
                    {
                        internalType: "uint48",
                        name: "validAfter",
                        type: "uint48",
                    },
                    {
                        internalType: "uint48",
                        name: "validUntil",
                        type: "uint48",
                    },
                ],
                internalType: "struct IAccountManager.ValidationData",
                name: "data",
                type: "tuple",
            },
        ],
        name: "grant",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
        ],
        name: "revoke",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "metadata",
                type: "bytes",
            },
        ],
        name: "setMetadata",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "challenge",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "validateSignature",
        outputs: [
            {
                internalType: "uint256",
                name: "validationData",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class IAccountManager__factory {
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.IAccountManager__factory = IAccountManager__factory;
IAccountManager__factory.abi = _abi;
